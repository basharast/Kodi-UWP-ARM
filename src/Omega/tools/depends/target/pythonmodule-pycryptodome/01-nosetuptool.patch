--- a/setup.py
+++ b/setup.py
@@ -252,16 +252,16 @@
     "Crypto.Signature",
     "Crypto.Util",
     "Crypto.Math",
-    "Crypto.SelfTest",
-    "Crypto.SelfTest.Cipher",
-    "Crypto.SelfTest.Hash",
-    "Crypto.SelfTest.IO",
-    "Crypto.SelfTest.Protocol",
-    "Crypto.SelfTest.PublicKey",
-    "Crypto.SelfTest.Random",
-    "Crypto.SelfTest.Signature",
-    "Crypto.SelfTest.Util",
-    "Crypto.SelfTest.Math",
+#    "Crypto.SelfTest",
+#    "Crypto.SelfTest.Cipher",
+#    "Crypto.SelfTest.Hash",
+#    "Crypto.SelfTest.IO",
+#    "Crypto.SelfTest.Protocol",
+#    "Crypto.SelfTest.PublicKey",
+#    "Crypto.SelfTest.Random",
+#    "Crypto.SelfTest.Signature",
+#    "Crypto.SelfTest.Util",
+#    "Crypto.SelfTest.Math",
 ]
 package_data = {
     "Crypto" : [ "py.typed", "*.pyi" ],
@@ -281,159 +281,159 @@
     Extension("Crypto.Hash._MD2",
         include_dirs=['src/'],
         sources=["src/MD2.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._MD4",
         include_dirs=['src/'],
         sources=["src/MD4.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._MD5",
         include_dirs=['src/'],
         sources=["src/MD5.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._SHA1",
         include_dirs=['src/'],
         sources=["src/SHA1.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._SHA256",
         include_dirs=['src/'],
         sources=["src/SHA256.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._SHA224",
         include_dirs=['src/'],
         sources=["src/SHA224.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._SHA384",
         include_dirs=['src/'],
         sources=["src/SHA384.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._SHA512",
         include_dirs=['src/'],
         sources=["src/SHA512.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._RIPEMD160",
         include_dirs=['src/'],
         sources=["src/RIPEMD160.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._keccak",
         include_dirs=['src/'],
         sources=["src/keccak.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._BLAKE2b",
         include_dirs=['src/'],
         sources=["src/blake2b.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._BLAKE2s",
         include_dirs=['src/'],
         sources=["src/blake2s.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._ghash_portable",
         include_dirs=['src/'],
         sources=['src/ghash_portable.c'],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Hash._ghash_clmul",
         include_dirs=['src/'],
         sources=['src/ghash_clmul.c'],
-        py_limited_api=True),
+        py_limited_api=False),
 
     # MACs
     Extension("Crypto.Hash._poly1305",
         include_dirs=['src/'],
         sources=["src/poly1305.c"],
-        py_limited_api=True),
+        py_limited_api=False),
 
     # Block encryption algorithms
     Extension("Crypto.Cipher._raw_aes",
         include_dirs=['src/'],
         sources=["src/AES.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_aesni",
         include_dirs=['src/'],
         sources=["src/AESNI.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_arc2",
         include_dirs=['src/'],
         sources=["src/ARC2.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_blowfish",
         include_dirs=['src/'],
         sources=["src/blowfish.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_eksblowfish",
         include_dirs=['src/'],
         sources=["src/blowfish_eks.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_cast",
         include_dirs=['src/'],
         sources=["src/CAST.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_des",
         include_dirs=['src/', 'src/libtom/'],
         sources=["src/DES.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_des3",
         include_dirs=['src/', 'src/libtom/'],
         sources=["src/DES3.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Util._cpuid_c",
         include_dirs=['src/'],
         sources=['src/cpuid.c'],
-        py_limited_api=True),
+        py_limited_api=False),
 
     Extension("Crypto.Cipher._pkcs1_decode",
         include_dirs=['src/'],
         sources=['src/pkcs1_decode.c'],
-        py_limited_api=True),
+        py_limited_api=False),
 
     # Chaining modes
     Extension("Crypto.Cipher._raw_ecb",
         include_dirs=['src/'],
         sources=["src/raw_ecb.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_cbc",
         include_dirs=['src/'],
         sources=["src/raw_cbc.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_cfb",
         include_dirs=['src/'],
         sources=["src/raw_cfb.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_ofb",
         include_dirs=['src/'],
         sources=["src/raw_ofb.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_ctr",
         include_dirs=['src/'],
         sources=["src/raw_ctr.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._raw_ocb",
         sources=["src/raw_ocb.c"],
-        py_limited_api=True),
+        py_limited_api=False),
 
     # Stream ciphers
     Extension("Crypto.Cipher._ARC4",
         include_dirs=['src/'],
         sources=["src/ARC4.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._Salsa20",
         include_dirs=['src/', 'src/libtom/'],
         sources=["src/Salsa20.c"],
-        py_limited_api=True),
+        py_limited_api=False),
     Extension("Crypto.Cipher._chacha20",
         include_dirs=['src/'],
         sources=["src/chacha20.c"],
-        py_limited_api=True),
+        py_limited_api=False),
 
     # Others
     Extension("Crypto.Protocol._scrypt",
         include_dirs=['src/'],
         sources=["src/scrypt.c"],
-        py_limited_api=True),
+        py_limited_api=False),
 
     # Utility modules
     Extension("Crypto.Util._strxor",
         include_dirs=['src/'],
         sources=['src/strxor.c'],
-        py_limited_api=True),
+        py_limited_api=False),
 
     # ECC
     Extension("Crypto.PublicKey._ec_ws",
