#if 0
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1     zw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb1             0         1  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_0
    def c1, 0, 1, 0.5, 0
    dcl t1
    dcl_2d s0
    texld r0, t1, s0
    mul r0.w, t1.y, c0.w
    frc r1.w, r0.w
    cmp r1.x, -r1.w, c1.x, c1.y
    add r1.y, r0.w, -r1.w
    cmp r0.w, r0.w, c1.x, r1.x
    add r0.w, r0.w, r1.y
    abs r0.w, r0.w
    mul r0.w, r0.w, c1.z
    frc r0.w, r0.w
    add r0.w, r0.w, r0.w
    frc r1.x, r0.w
    add r0.w, r0.w, -r1.x
    cmp r1.xyz, -r0.w, c1.x, r0
    cmp r1.w, -r0.w, c1.x, c1.y
    mov oC0, r1

// approximately 16 instruction slots used (1 texture, 15 arithmetic)
ps_4_0
dcl_constantbuffer CB1[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 1
mul r0.x, v2.y, cb1[0].w
round_z r0.x, r0.x
ftou r0.x, |r0.x|
and r0.x, r0.x, l(1)
if_nz r0.x
  sample r0.xyzw, v2.xyxx, t0.xyzw, s0
  mov o0.xyz, r0.xyzx
  mov o0.w, l(1.000000)
else 
  mov o0.xyzw, l(0,0,0,0)
endif 
ret 
// Approximately 0 instruction slots used
#endif

const BYTE guishader_interlaced_right[] =
{
     68,  88,  66,  67,  10, 150, 
    182, 239, 171,  67, 168, 116, 
     87, 229, 206, 180, 137,  64, 
    221, 122,   1,   0,   0,   0, 
    168,   3,   0,   0,   4,   0, 
      0,   0,  48,   0,   0,   0, 
    160,   1,   0,   0, 232,   2, 
      0,   0, 116,   3,   0,   0, 
     65, 111, 110,  57, 104,   1, 
      0,   0, 104,   1,   0,   0, 
      0,   2, 255, 255,  52,   1, 
      0,   0,  52,   0,   0,   0, 
      1,   0,  40,   0,   0,   0, 
     52,   0,   0,   0,  52,   0, 
      1,   0,  36,   0,   0,   0, 
     52,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   2, 255, 255,  81,   0, 
      0,   5,   1,   0,  15, 160, 
      0,   0,   0,   0,   0,   0, 
    128,  63,   0,   0,   0,  63, 
      0,   0,   0,   0,  31,   0, 
      0,   2,   0,   0,   0, 128, 
      1,   0,  15, 176,  31,   0, 
      0,   2,   0,   0,   0, 144, 
      0,   8,  15, 160,  66,   0, 
      0,   3,   0,   0,  15, 128, 
      1,   0, 228, 176,   0,   8, 
    228, 160,   5,   0,   0,   3, 
      0,   0,   8, 128,   1,   0, 
     85, 176,   0,   0, 255, 160, 
     19,   0,   0,   2,   1,   0, 
      8, 128,   0,   0, 255, 128, 
     88,   0,   0,   4,   1,   0, 
      1, 128,   1,   0, 255, 129, 
      1,   0,   0, 160,   1,   0, 
     85, 160,   2,   0,   0,   3, 
      1,   0,   2, 128,   0,   0, 
    255, 128,   1,   0, 255, 129, 
     88,   0,   0,   4,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0,   0, 160,   1,   0, 
      0, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   1,   0,  85, 128, 
     35,   0,   0,   2,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      5,   0,   0,   3,   0,   0, 
      8, 128,   0,   0, 255, 128, 
      1,   0, 170, 160,  19,   0, 
      0,   2,   0,   0,   8, 128, 
      0,   0, 255, 128,   2,   0, 
      0,   3,   0,   0,   8, 128, 
      0,   0, 255, 128,   0,   0, 
    255, 128,  19,   0,   0,   2, 
      1,   0,   1, 128,   0,   0, 
    255, 128,   2,   0,   0,   3, 
      0,   0,   8, 128,   0,   0, 
    255, 128,   1,   0,   0, 129, 
     88,   0,   0,   4,   1,   0, 
      7, 128,   0,   0, 255, 129, 
      1,   0,   0, 160,   0,   0, 
    228, 128,  88,   0,   0,   4, 
      1,   0,   8, 128,   0,   0, 
    255, 129,   1,   0,   0, 160, 
      1,   0,  85, 160,   1,   0, 
      0,   2,   0,   8,  15, 128, 
      1,   0, 228, 128, 255, 255, 
      0,   0,  83,  72,  68,  82, 
     64,   1,   0,   0,  64,   0, 
      0,   0,  80,   0,   0,   0, 
     89,   0,   0,   4,  70, 142, 
     32,   0,   1,   0,   0,   0, 
      1,   0,   0,   0,  90,   0, 
      0,   3,   0,  96,  16,   0, 
      0,   0,   0,   0,  88,  24, 
      0,   4,   0, 112,  16,   0, 
      0,   0,   0,   0,  85,  85, 
      0,   0,  98,  16,   0,   3, 
     50,  16,  16,   0,   2,   0, 
      0,   0, 101,   0,   0,   3, 
    242,  32,  16,   0,   0,   0, 
      0,   0, 104,   0,   0,   2, 
      1,   0,   0,   0,  56,   0, 
      0,   8,  18,   0,  16,   0, 
      0,   0,   0,   0,  26,  16, 
     16,   0,   2,   0,   0,   0, 
     58, 128,  32,   0,   1,   0, 
      0,   0,   0,   0,   0,   0, 
     67,   0,   0,   5,  18,   0, 
     16,   0,   0,   0,   0,   0, 
     10,   0,  16,   0,   0,   0, 
      0,   0,  28,   0,   0,   6, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16, 128, 
    129,   0,   0,   0,   0,   0, 
      0,   0,   1,   0,   0,   7, 
     18,   0,  16,   0,   0,   0, 
      0,   0,  10,   0,  16,   0, 
      0,   0,   0,   0,   1,  64, 
      0,   0,   1,   0,   0,   0, 
     31,   0,   4,   3,  10,   0, 
     16,   0,   0,   0,   0,   0, 
     69,   0,   0,   9, 242,   0, 
     16,   0,   0,   0,   0,   0, 
     70,  16,  16,   0,   2,   0, 
      0,   0,  70, 126,  16,   0, 
      0,   0,   0,   0,   0,  96, 
     16,   0,   0,   0,   0,   0, 
     54,   0,   0,   5, 114,  32, 
     16,   0,   0,   0,   0,   0, 
     70,   2,  16,   0,   0,   0, 
      0,   0,  54,   0,   0,   5, 
    130,  32,  16,   0,   0,   0, 
      0,   0,   1,  64,   0,   0, 
      0,   0, 128,  63,  18,   0, 
      0,   1,  54,   0,   0,   8, 
    242,  32,  16,   0,   0,   0, 
      0,   0,   2,  64,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,  21,   0, 
      0,   1,  62,   0,   0,   1, 
     73,  83,  71,  78, 132,   0, 
      0,   0,   4,   0,   0,   0, 
      8,   0,   0,   0, 104,   0, 
      0,   0,   0,   0,   0,   0, 
      1,   0,   0,   0,   3,   0, 
      0,   0,   0,   0,   0,   0, 
     15,   0,   0,   0, 116,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   1,   0,   0,   0, 
     15,   0,   0,   0, 122,   0, 
      0,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
      3,   3,   0,   0, 122,   0, 
      0,   0,   1,   0,   0,   0, 
      0,   0,   0,   0,   3,   0, 
      0,   0,   2,   0,   0,   0, 
     12,   0,   0,   0,  83,  86, 
     95,  80,  79,  83,  73,  84, 
     73,  79,  78,   0,  67,  79, 
     76,  79,  82,   0,  84,  69, 
     88,  67,  79,  79,  82,  68, 
      0, 171,  79,  83,  71,  78, 
     44,   0,   0,   0,   1,   0, 
      0,   0,   8,   0,   0,   0, 
     32,   0,   0,   0,   0,   0, 
      0,   0,   0,   0,   0,   0, 
      3,   0,   0,   0,   0,   0, 
      0,   0,  15,   0,   0,   0, 
     83,  86,  95,  84,  65,  82, 
     71,  69,  84,   0, 171, 171
};
