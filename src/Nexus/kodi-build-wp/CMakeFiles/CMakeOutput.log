The target system is: WindowsStore - 10.0.18362.0 - 
The host system is: Windows - 10.0.22000 - AMD64
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
MSBuild version 17.5.0-preview-22601-03+a2490dd3f for .NET Framework
Build started 1/20/2023 6:27:50 AM.
Project "C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdCXX\CompilerIdCXX.vcxproj" on node 1 (default targets).
PrepareForBuild:
  Creating directory "Debug\".
C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets(505,5): warning MSB8021: The value 'MultiByte' of the variable 'CharacterSet' is incompatible with the value 'true' of the variable 'WindowsAppContainer'. [C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdCXX\CompilerIdCXX.vcxproj]
  Creating directory "Debug\CompilerIdCXX.tlog\".
  Creating directory "Generated Files\".
InitializeBuildStatus:
  Creating "Debug\CompilerIdCXX.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\bin\HostX64\arm\CL.exe /c /I"C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdCXX\\" /I"Generated Files\\" /IDebug\ /nologo /W0 /WX- /diagnostics:column /sdl /MP /Od /Oi /Oy- /D _UNICODE /D UNICODE /D __WRL_NO_DEFAULT_LIB__ /Gm- /EHsc /RTC1 /MDd /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TP /FU"C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\lib\x86\store\references\platform.winmd" /analyze- /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\bin\HostX64\arm\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib /MANIFEST /MANIFESTUAC:NO /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /OPT:REF /OPT:ICF /TLBID:1 /APPCONTAINER /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:ARM Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\bin\Hostx64\arm\cl.exe
FinalizeBuildStatus:
  Deleting file "Debug\CompilerIdCXX.tlog\unsuccessfulbuild".
  Touching "Debug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate".
Done Building Project "C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdCXX\CompilerIdCXX.vcxproj" (default targets).

Build succeeded.

"C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdCXX\CompilerIdCXX.vcxproj" (default target) (1) ->
(PrepareForBuild target) -> 
  C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets(505,5): warning MSB8021: The value 'MultiByte' of the variable 'CharacterSet' is incompatible with the value 'true' of the variable 'WindowsAppContainer'. [C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdCXX\CompilerIdCXX.vcxproj]

    1 Warning(s)
    0 Error(s)

Time Elapsed 00:00:00.84


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.vcxproj"

The CXX compiler identification is MSVC, found in "C:/kodi-build-wp/CMakeFiles/3.25.0-msvc1/CompilerIdCXX/CompilerIdCXX.exe"

Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
MSBuild version 17.5.0-preview-22601-03+a2490dd3f for .NET Framework
Build started 1/20/2023 6:27:51 AM.
Project "C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdC\CompilerIdC.vcxproj" on node 1 (default targets).
PrepareForBuild:
  Creating directory "Debug\".
C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets(505,5): warning MSB8021: The value 'MultiByte' of the variable 'CharacterSet' is incompatible with the value 'true' of the variable 'WindowsAppContainer'. [C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdC\CompilerIdC.vcxproj]
  Creating directory "Debug\CompilerIdC.tlog\".
  Creating directory "Generated Files\".
InitializeBuildStatus:
  Creating "Debug\CompilerIdC.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\bin\HostX64\arm\CL.exe /c /I"C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdC\\" /I"Generated Files\\" /IDebug\ /nologo /W0 /WX- /diagnostics:column /sdl /MP /Od /Oi /Oy- /D _UNICODE /D UNICODE /D __WRL_NO_DEFAULT_LIB__ /Gm- /EHsc /RTC1 /MDd /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc143.pdb" /external:W0 /Gd /TC /FU"C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\lib\x86\store\references\platform.winmd" /analyze- /FC /errorReport:queue CMakeCCompilerId.c
  CMakeCCompilerId.c
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\bin\HostX64\arm\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdC.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib /MANIFEST /MANIFESTUAC:NO /manifest:embed /PDB:".\CompilerIdC.pdb" /SUBSYSTEM:CONSOLE /OPT:REF /OPT:ICF /TLBID:1 /APPCONTAINER /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdC.lib" /MACHINE:ARM Debug\CMakeCCompilerId.obj
  CompilerIdC.vcxproj -> C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdC\CompilerIdC.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_C_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_C_COMPILER=C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\bin\Hostx64\arm\cl.exe
FinalizeBuildStatus:
  Deleting file "Debug\CompilerIdC.tlog\unsuccessfulbuild".
  Touching "Debug\CompilerIdC.tlog\CompilerIdC.lastbuildstate".
Done Building Project "C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdC\CompilerIdC.vcxproj" (default targets).

Build succeeded.

"C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdC\CompilerIdC.vcxproj" (default target) (1) ->
(PrepareForBuild target) -> 
  C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VC\v170\Microsoft.CppBuild.targets(505,5): warning MSB8021: The value 'MultiByte' of the variable 'CharacterSet' is incompatible with the value 'true' of the variable 'WindowsAppContainer'. [C:\kodi-build-wp\CMakeFiles\3.25.0-msvc1\CompilerIdC\CompilerIdC.vcxproj]

    1 Warning(s)
    0 Error(s)

Time Elapsed 00:00:00.56


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CompilerIdC.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CompilerIdC.vcxproj"

The C compiler identification is MSVC, found in "C:/kodi-build-wp/CMakeFiles/3.25.0-msvc1/CompilerIdC/CompilerIdC.exe"

Checking whether the ASM compiler is MSVC using "-?" matched "Microsoft":
Microsoft (R) C/C++ Optimizing Compiler Version 19.35.32124 for ARM
Copyright (C) Microsoft Corporation.  All rights reserved.

                         C/C++ COMPILER OPTIONS


                              -OPTIMIZATION-

/O1 maximum optimizations (favor space) /O2 maximum optimizations (favor speed)
/Ob<n> inline expansion (default n=0)   /Od disable optimizations (default)
/Og enable global optimization          /Oi[-] enable intrinsic functions
/Os favor code space                    /Ot favor code speed
/Ox optimizations (favor speed)         /Oy[-] enable frame pointer omission 

                             -CODE GENERATION-

/Gu[-] ensure distinct functions have distinct addresses
/Gw[-] separate global variables for linker
/GF enable read-only string pooling     /Gm[-] enable minimal rebuild
/Gy[-] separate functions for linker    /GS[-] enable security checks
/GR[-] enable C++ RTTI                  /GX[-] enable C++ EH (same as /EHsc)
/guard:cf[-] enable CFG (control flow guard)
/guard:ehcont[-] enable EH continuation metadata (CET)
/EHs enable C++ EH (no SEH exceptions)  /EHa enable C++ EH (w/ SEH exceptions)
/EHc extern "C" defaults to nothrow     
/EHr always generate noexcept runtime termination checks
/fp:<contract|except[-]|fast|precise|strict> choose floating-point model:
    contract - consider floating-point contractions when generating code
    except[-] - consider floating-point exceptions when generating code
    fast - "fast" floating-point model; results are less predictable
    precise - "precise" floating-point model; results are predictable
    strict - "strict" floating-point model (implies /fp:except)
/Qfast_transcendentals generate inline FP intrinsics even with /fp:except
/Qspectre[-] enable mitigations for CVE 2017-5753
/Qpar[-] enable parallel code generation
/Qpar-report:1 auto-parallelizer diagnostic; indicate parallelized loops
/Qpar-report:2 auto-parallelizer diagnostic; indicate loops not parallelized
/Qvec-report:1 auto-vectorizer diagnostic; indicate vectorized loops
/Qvec-report:2 auto-vectorizer diagnostic; indicate loops not vectorized
/GL[-] enable link-time code generation 
/volatile:<iso|ms> choose volatile model:
    iso - Acquire/release semantics not guaranteed on volatile accesses
    ms  - Acquire/release semantics guaranteed on volatile accesses
/GA optimize for Windows Application    /Gd __cdecl calling convention 
/arch:<target> minimum CPU architecture requirements
    ARMv7VE - enable use of ARMv7VE instructions
    VFPv4 - enable use of VFPv4 instructions
/QRunaligned[-] enable unaligned memory access
/Gs[num] control stack checking calls   /GT generate fiber-safe TLS accesses
/RTC1 Enable fast checks (/RTCsu)       /RTCc Convert to smaller type checks
/RTCs Stack Frame runtime checking      /RTCu Uninitialized local usage checks
/clr[:option] compile for common language runtime, where option is:
    pure - produce IL-only output file (no native executable code)
    safe - produce IL-only verifiable output file
    initialAppDomain - enable initial AppDomain behavior of Visual C++ 2002
    nostdlib - ignore the default \clr directory

                              -OUTPUT FILES-

/Fa[file] name assembly listing file    /FA[scu] configure assembly listing
/Fd[file] name .PDB file                /Fe<file> name executable file
/Fm[file] name map file                 /Fo<file> name object file
/Fp<file> name precompiled header file  /Fr[file] name source browser file
/FR[file] name extended .SBR file       /Fi[file] name preprocessed file
/Fd: <file> name .PDB file              /Fe: <file> name executable file
/Fm: <file> name map file               /Fo: <file> name object file
/Fp: <file> name .PCH file              /FR: <file> name extended .SBR file
/Fi: <file> name preprocessed file      
/Ft<dir> location of the header files generated for #import
/doc[file] process XML documentation comments and optionally name the .xdc file

                              -PREPROCESSOR-

/AI<dir> add to assembly search path    /FU<file> forced using assembly/module 
/C don't strip comments                 /D<name>{=|#}<text> define macro
/E preprocess to stdout                 /EP preprocess to stdout, no #line
/P preprocess to file                   /Fx merge injected code to file
/FI<file> name forced include file      /U<name> remove predefined macro
/u remove all predefined macros         /I<dir> add to include search path
/X ignore "standard places"             
/PH generate #pragma file_hash when preprocessing
/PD print all macro definitions         

                                -LANGUAGE-

/std:<c++14|c++17|c++20|c++latest> C++ standard version
    c++14 - ISO/IEC 14882:2014 (default)
    c++17 - ISO/IEC 14882:2017
    c++20 - ISO/IEC 14882:2020
    c++latest - latest draft standard (feature set subject to change)
/permissive[-] enable some nonconforming code to compile (feature set subject to change) (on by default)
/Ze enable extensions (default)         /Za disable extensions
/ZW enable WinRT language extensions    /Zs syntax check only
/Zc:arg1[,arg2] C++ language conformance, where arguments can be:
  forScope[-]           enforce Standard C++ for scoping rules
  wchar_t[-]            wchar_t is the native type, not a typedef
  auto[-]               enforce the new Standard C++ meaning for auto
  trigraphs[-]          enable trigraphs (off by default)
  rvalueCast[-]         enforce Standard C++ explicit type conversion rules
  strictStrings[-]      disable string-literal to [char|wchar_t]*
                        conversion (off by default)
  implicitNoexcept[-]   enable implicit noexcept on required functions
  threadSafeInit[-]     enable thread-safe local static initialization
  inline[-]             remove unreferenced function or data if it is
                        COMDAT or has internal linkage only (off by default)
  sizedDealloc[-]       enable C++14 global sized deallocation
                        functions (on by default)
  throwingNew[-]        assume operator new throws on failure (off by default)
  referenceBinding[-]   a temporary will not bind to an non-const
                        lvalue reference (off by default)
  twoPhase-             disable two-phase name lookup
  ternary[-]            enforce C++11 rules for conditional operator (off by default)
  noexceptTypes[-]      enforce C++17 noexcept rules (on by default in C++17 or later)
  alignedNew[-]         enable C++17 alignment of dynamically allocated objects (on by default)
  hiddenFriend[-]       enforce Standard C++ hidden friend rules (implied by /permissive-)
  externC[-]            enforce Standard C++ rules for 'extern "C"' functions (implied by /permissive-)
  lambda[-]             better lambda support by using the newer lambda processor (off by default)
  tlsGuards[-]          generate runtime checks for TLS variable initialization (on by default)
  zeroSizeArrayNew[-]   call member new/delete for 0-size arrays of objects (on by default)
  static_assert[-]      strict handling of 'static_assert' (implied by /permissive-)
  gotoScope[-]          cannot jump past the initialization of a variable (implied by /permissive-)
  templateScope[-]      enforce Standard C++ template parameter shadowing rules
  enumTypes[-]          enable Standard C++ underlying enum types (off by default)
  checkGwOdr[-]         enforce Standard C++ one definition rule violations
                        when /Gw has been enabled (off by default)
  __STDC__              define __STDC__ to 1 in C
/await enable resumable functions extension
/await:strict enable standard C++20 coroutine support with earlier language versions
/constexpr:depth<N>     recursion depth limit for constexpr evaluation (default: 512)
/constexpr:backtrace<N> show N constexpr evaluations in diagnostics (default: 10)
/constexpr:steps<N>     terminate constexpr evaluation after N steps (default: 100000)
/Zi enable debugging information        /Z7 enable old-style debug info
/Zo[-] generate richer debugging information for optimized code (on by default)
/ZH:[MD5|SHA1|SHA_256] hash algorithm for calculation of file checksum in debug info (default: SHA_256)
/Zp[n] pack structs on n-byte boundary  /Zl omit default library name in .OBJ
/vd{0|1|2} disable/enable vtordisp      /vm<x> type of pointers to members
/std:<c11|c17> C standard version
    c11 - ISO/IEC 9899:2011
    c17 - ISO/IEC 9899:2018

                              -MISCELLANEOUS-

@<file> options response file           /?, /help print this help message
/bigobj generate extended object format /c compile only, no link
/errorReport:option deprecated. Report internal compiler errors to Microsoft
    none - do not send report                
    prompt - prompt to immediately send report
    queue - at next admin logon, prompt to send report (default)
    send - send report automatically         
/FC use full pathnames in diagnostics   /H<num> max external name length
/J default char type is unsigned        
/MP[n] use up to 'n' processes for compilation
/nologo suppress copyright message      /showIncludes show include file names
/Tc<source file> compile file as .c     /Tp<source file> compile file as .cpp
/TC compile all files as .c             /TP compile all files as .cpp
/V<string> set version string           /Yc[file] create .PCH file
/Yd put debug info in every .OBJ        /Yl[sym] inject .PCH ref for debug lib
/Yu[file] use .PCH file                 /Y- disable all PCH options
/Zm<n> max memory alloc (% of default)  /FS force to use MSPDBSRV.EXE
/source-charset:<iana-name>|.nnnn set source character set
/execution-charset:<iana-name>|.nnnn set execution character set
/utf-8 set source and execution character set to UTF-8
/validate-charset[-] validate UTF-8 files for only legal characters
/fastfail[-] enable fast-fail mode      /JMC[-] enable native just my code
/presetPadding[-] zero initialize padding for stack based class types
/volatileMetadata[-] generate metadata on volatile memory accesses
/sourcelink [file] file containing source link information

                                -LINKING-

/LD Create .DLL                         /LDd Create .DLL debug library
/LN Create a .netmodule                 /F<num> set stack size
/link [linker options and libraries]    /MD link with MSVCRT.LIB
/MT link with LIBCMT.LIB                /MDd link with MSVCRTD.LIB debug lib
/MTd link with LIBCMTD.LIB debug lib    

                              -CODE ANALYSIS-

/analyze[-] Enable native analysis      /analyze:quiet[-] No warning to console
/analyze:log<name> Warnings to file     /analyze:autolog Log to *.pftlog
/analyze:autolog:ext<ext> Log to *.<ext>/analyze:autolog- No log file
/analyze:WX- Warnings not fatal         /analyze:stacksize<num> Max stack frame
/analyze:max_paths<num> Max paths       /analyze:only Analyze, no code gen

                              -DIAGNOSTICS-

/diagnostics:<args,...> controls the format of diagnostic messages:
             classic   - retains prior format
             column[-] - prints column information
             caret[-]  - prints column and the indicated line of source
/Wall enable all warnings               /w   disable all warnings
/W<n> set warning level (default n=1)   
/Wv:xx[.yy[.zzzzz]] disable warnings introduced after version xx.yy.zzzzz
/WX treat warnings as errors            /WL enable one line diagnostics
/wd<n> disable warning n                /we<n> treat warning n as an error
/wo<n> issue warning n once             /w<l><n> set warning level 1-4 for n
/external:I <path>      - location of external headers
/external:env:<var>     - environment variable with locations of external headers
/external:anglebrackets - treat all headers included via <> as external
/external:W<n>          - warning level for external headers
/external:templates[-]  - evaluate warning level across template instantiation chain
/sdl enable additional security features and warnings
/options:strict unrecognized compiler options are an error

Detecting CXX compiler ABI info compiled with the following output:
Change Dir: C:/kodi-build-wp/CMakeFiles/CMakeScratch/TryCompile-y0mr0u

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_b44c3.vcxproj /p:Configuration=Debug /p:Platform=ARM /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.5.0-preview-22601-03+a2490dd3f for .NET Framework
  Microsoft (R) C/C++ Optimizing Compiler Version 19.35.32124 for ARM
  CMakeCXXCompilerABI.cpp
  Copyright (C) Microsoft Corporation.  All rights reserved.
  cl /c /I"C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-y0mr0u\\" /I"Generated Files\\" /IcmTC_b44c3.dir\Debug\ /Zi /W3 /WX- /diagnostics:column /sdl /MP /Od /Ob0 /Oi /Oy- /D _UNICODE /D UNICODE /D WINAPI_FAMILY=WINAPI_FAMILY_APP /D __WRL_NO_DEFAULT_LIB__ /D WIN32 /D _WINDOWS /D UNICODE /D _UNICODE /D "CMAKE_INTDIR=\"Debug\"" /Gm- /EHsc /MDd /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_b44c3.dir\Debug\\" /Fd"cmTC_b44c3.dir\Debug\vc143.pdb" /external:W3 /Gd /TP /FU"C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\lib\x86\store\references\platform.winmd" /analyze- /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Preview\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCXXCompilerABI.cpp"
LINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:ICF' specification [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-y0mr0u\cmTC_b44c3.vcxproj]
  cmTC_b44c3.vcxproj -> C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-y0mr0u\Debug\cmTC_b44c3.exe
C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VisualStudio\v17.0\AppxPackage\Microsoft.AppXPackage.Targets(2771,5): warning : Publisher name (CN=CMake) does not match signing certificate subject: CN=CMake Test Cert. Updating Publisher name. [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-y0mr0u\cmTC_b44c3.vcxproj]
  cmTC_b44c3 -> C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-y0mr0u\AppPackages\cmTC_b44c3\cmTC_b44c3_1.0.0.0_ARM_Debug_Test\cmTC_b44c3_1.0.0.0_ARM_Debug.msix
  cmTC_b44c3 -> cmTC_b44c3.dir\Debug\Symbols\cmTC_b44c3_1.0.0.0_ARM_Debug.appxsym



Detecting C compiler ABI info compiled with the following output:
Change Dir: C:/kodi-build-wp/CMakeFiles/CMakeScratch/TryCompile-yas6ak

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_6a9b4.vcxproj /p:Configuration=Debug /p:Platform=ARM /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.5.0-preview-22601-03+a2490dd3f for .NET Framework
  Microsoft (R) C/C++ Optimizing Compiler Version 19.35.32124 for ARM
  CMakeCCompilerABI.c
  Copyright (C) Microsoft Corporation.  All rights reserved.
  cl /c /I"C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-yas6ak\\" /I"Generated Files\\" /IcmTC_6a9b4.dir\Debug\ /Zi /W3 /WX- /diagnostics:column /sdl /MP /Od /Ob0 /Oi /Oy- /D _UNICODE /D UNICODE /D WINAPI_FAMILY=WINAPI_FAMILY_APP /D __WRL_NO_DEFAULT_LIB__ /D WIN32 /D _WINDOWS /D UNICODE /D _UNICODE /D "CMAKE_INTDIR=\"Debug\"" /Gm- /MDd /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_6a9b4.dir\Debug\\" /Fd"cmTC_6a9b4.dir\Debug\vc143.pdb" /external:W3 /Gd /TC /FU"C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\lib\x86\store\references\platform.winmd" /analyze- /errorReport:queue "C:\Program Files\Microsoft Visual Studio\2022\Preview\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.25\Modules\CMakeCCompilerABI.c"
LINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:ICF' specification [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-yas6ak\cmTC_6a9b4.vcxproj]
  cmTC_6a9b4.vcxproj -> C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-yas6ak\Debug\cmTC_6a9b4.exe
C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VisualStudio\v17.0\AppxPackage\Microsoft.AppXPackage.Targets(2771,5): warning : Publisher name (CN=CMake) does not match signing certificate subject: CN=CMake Test Cert. Updating Publisher name. [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-yas6ak\cmTC_6a9b4.vcxproj]
  cmTC_6a9b4 -> C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-yas6ak\AppPackages\cmTC_6a9b4\cmTC_6a9b4_1.0.0.0_ARM_Debug_Test\cmTC_6a9b4_1.0.0.0_ARM_Debug.msix
  cmTC_6a9b4 -> cmTC_6a9b4.dir\Debug\Symbols\cmTC_6a9b4_1.0.0.0_ARM_Debug.appxsym



Determining if the _ARM_ exist passed with the following output:
Change Dir: C:/kodi-build-wp/CMakeFiles/CMakeScratch/TryCompile-6x1t43

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_00f5b.vcxproj /p:Configuration=Debug /p:Platform=ARM /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.5.0-preview-22601-03+a2490dd3f for .NET Framework
  Microsoft (R) C/C++ Optimizing Compiler Version 19.35.32124 for ARM
  CheckSymbolExists.c
  Copyright (C) Microsoft Corporation.  All rights reserved.
  cl /c /I"C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-6x1t43\\" /I"Generated Files\\" /IcmTC_00f5b.dir\Debug\ /Zi /W3 /WX- /diagnostics:column /sdl /MP /Od /Ob0 /Oi /Oy- /D _UNICODE /D UNICODE /D WINAPI_FAMILY=WINAPI_FAMILY_APP /D __WRL_NO_DEFAULT_LIB__ /D WIN32 /D _WINDOWS /D UNICODE /D _UNICODE /D "CMAKE_INTDIR=\"Debug\"" /Gm- /MDd /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_00f5b.dir\Debug\\" /Fd"cmTC_00f5b.dir\Debug\vc143.pdb" /external:W3 /Gd /TC /FU"C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\lib\x86\store\references\platform.winmd" /analyze- /errorReport:queue "C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-6x1t43\CheckSymbolExists.c"
LINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:ICF' specification [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-6x1t43\cmTC_00f5b.vcxproj]
  cmTC_00f5b.vcxproj -> C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-6x1t43\Debug\cmTC_00f5b.exe
C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VisualStudio\v17.0\AppxPackage\Microsoft.AppXPackage.Targets(2771,5): warning : Publisher name (CN=CMake) does not match signing certificate subject: CN=CMake Test Cert. Updating Publisher name. [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-6x1t43\cmTC_00f5b.vcxproj]
  cmTC_00f5b -> C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-6x1t43\AppPackages\cmTC_00f5b\cmTC_00f5b_1.0.0.0_ARM_Debug_Test\cmTC_00f5b_1.0.0.0_ARM_Debug.msix
  cmTC_00f5b -> cmTC_00f5b.dir\Debug\Symbols\cmTC_00f5b_1.0.0.0_ARM_Debug.appxsym


File CheckSymbolExists.c:
/* */
#include <Windows.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef _ARM_
  return ((int*)(&_ARM_))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the PRIdMAX exist passed with the following output:
Change Dir: C:/kodi-build-wp/CMakeFiles/CMakeScratch/TryCompile-ck8bmc

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_6ba93.vcxproj /p:Configuration=Debug /p:Platform=ARM /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.5.0-preview-22601-03+a2490dd3f for .NET Framework
  Microsoft (R) C/C++ Optimizing Compiler Version 19.35.32124 for ARM
  CheckSymbolExists.c
  Copyright (C) Microsoft Corporation.  All rights reserved.
  cl /c /I"C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-ck8bmc\\" /I"Generated Files\\" /IcmTC_6ba93.dir\Debug\ /Zi /W3 /WX- /diagnostics:column /sdl /MP /Od /Ob0 /Oi /Oy- /D _UNICODE /D UNICODE /D WINAPI_FAMILY=WINAPI_FAMILY_APP /D __WRL_NO_DEFAULT_LIB__ /D WIN32 /D _WINDOWS /D UNICODE /D _UNICODE /D "CMAKE_INTDIR=\"Debug\"" /Gm- /MDd /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_6ba93.dir\Debug\\" /Fd"cmTC_6ba93.dir\Debug\vc143.pdb" /external:W3 /Gd /TC /FU"C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\lib\x86\store\references\platform.winmd" /analyze- /errorReport:queue "C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-ck8bmc\CheckSymbolExists.c"
LINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:ICF' specification [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-ck8bmc\cmTC_6ba93.vcxproj]
  cmTC_6ba93.vcxproj -> C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-ck8bmc\Debug\cmTC_6ba93.exe
C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VisualStudio\v17.0\AppxPackage\Microsoft.AppXPackage.Targets(2771,5): warning : Publisher name (CN=CMake) does not match signing certificate subject: CN=CMake Test Cert. Updating Publisher name. [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-ck8bmc\cmTC_6ba93.vcxproj]
  cmTC_6ba93 -> C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-ck8bmc\AppPackages\cmTC_6ba93\cmTC_6ba93_1.0.0.0_ARM_Debug_Test\cmTC_6ba93_1.0.0.0_ARM_Debug.msix
  cmTC_6ba93 -> cmTC_6ba93.dir\Debug\Symbols\cmTC_6ba93_1.0.0.0_ARM_Debug.appxsym


File CheckSymbolExists.c:
/* */
#include <inttypes.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef PRIdMAX
  return ((int*)(&PRIdMAX))[argc];
#else
  (void)argc;
  return 0;
#endif
}
Determining if the function libiconv exists passed with the following output:
Change Dir: C:/kodi-build-wp/CMakeFiles/CMakeScratch/TryCompile-031ohn

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Preview/MSBuild/Current/Bin/amd64/MSBuild.exe cmTC_c152c.vcxproj /p:Configuration=Debug /p:Platform=ARM /p:VisualStudioVersion=17.0 /v:m && MSBuild version 17.5.0-preview-22601-03+a2490dd3f for .NET Framework
  Microsoft (R) C/C++ Optimizing Compiler Version 19.35.32124 for ARM
  CheckFunctionExists.c
  Copyright (C) Microsoft Corporation.  All rights reserved.
  cl /c /I"C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-031ohn\\" /I"Generated Files\\" /IcmTC_c152c.dir\Debug\ /Zi /W3 /WX- /diagnostics:column /sdl /MP /Od /Ob0 /Oi /Oy- /D _UNICODE /D UNICODE /D WINAPI_FAMILY=WINAPI_FAMILY_APP /D __WRL_NO_DEFAULT_LIB__ /D WIN32 /D _WINDOWS /D UNICODE /D _UNICODE /D CHECK_FUNCTION_EXISTS=libiconv /D "CMAKE_INTDIR=\"Debug\"" /Gm- /MDd /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_c152c.dir\Debug\\" /Fd"cmTC_c152c.dir\Debug\vc143.pdb" /external:W3 /Gd /TC /FU"C:\Program Files\Microsoft Visual Studio\2022\Preview\VC\Tools\MSVC\14.41.33901\lib\x86\store\references\platform.winmd" /analyze- /errorReport:queue "C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-031ohn\CheckFunctionExists.c"
LINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/OPT:ICF' specification [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-031ohn\cmTC_c152c.vcxproj]
LINK : warning LNK4098: defaultlib 'MSVCRT' conflicts with use of other libs; use /NODEFAULTLIB:library [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-031ohn\cmTC_c152c.vcxproj]
  cmTC_c152c.vcxproj -> C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-031ohn\Debug\cmTC_c152c.exe
C:\Program Files\Microsoft Visual Studio\2022\Preview\MSBuild\Microsoft\VisualStudio\v17.0\AppxPackage\Microsoft.AppXPackage.Targets(2771,5): warning : Publisher name (CN=CMake) does not match signing certificate subject: CN=CMake Test Cert. Updating Publisher name. [C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-031ohn\cmTC_c152c.vcxproj]
  cmTC_c152c -> C:\kodi-build-wp\CMakeFiles\CMakeScratch\TryCompile-031ohn\AppPackages\cmTC_c152c\cmTC_c152c_1.0.0.0_ARM_Debug_Test\cmTC_c152c_1.0.0.0_ARM_Debug.msix
  cmTC_c152c -> cmTC_c152c.dir\Debug\Symbols\cmTC_c152c_1.0.0.0_ARM_Debug.appxsym



