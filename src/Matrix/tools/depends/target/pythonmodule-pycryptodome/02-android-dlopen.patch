--- a/lib/Crypto/Util/_raw_api.py
+++ b/lib/Crypto/Util/_raw_api.py
@@ -101,11 +101,14 @@
     def load_lib(name, cdecl):
         import platform
         bits, linkage = platform.architecture()
-        if "." not in name and not linkage.startswith("Win"):
-            full_name = find_library(name)
-            if full_name is None:
-                raise OSError("Cannot load library '%s'" % name)
-            name = full_name
+        try:
+            if "." not in name and not linkage.startswith("Win"):
+                full_name = find_library(name)
+                if full_name is None:
+                    raise OSError("Cannot load library '%s'" % name)
+                name = full_name
+        except IOError:
+            raise OSError("Cannot load library '%s'" % name)
         return CDLL(name)
 
     def get_c_string(c_string):
@@ -165,7 +168,7 @@
     for ext, mod, typ in imp.get_suffixes():
         if typ == imp.C_EXTENSION:
             try:
-                return load_lib(pycryptodome_filename(dir_comps, basename + ext), cdecl)
+                return load_lib("lib" + name.replace(".", "_") + ".so", cdecl)
             except OSError:
                 pass
     raise OSError("Cannot load native module '%s'" % name)
